{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\workspace\\\\react-client\\\\src\\\\components\\\\ChatRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\n\nconst ChatRoom = () => {\n  _s();\n\n  const [privateChats, setPrivateChats] = useState(new Map());\n  const [publicChats, setPublicChats] = useState([]);\n  const [tab, setTab] = useState(\"CHATROOM\");\n  const [userData, setUserData] = useState({\n    username: '',\n    receiverName: '',\n    connected: false,\n    message: ''\n  });\n  useEffect(() => {\n    console.log(userData);\n  }, [userData]);\n\n  const connect = () => {\n    let Sock = new SockJS('http://localhost:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n\n  const onConnected = () => {\n    setUserData({ ...userData,\n      \"connected\": true\n    });\n    stompClient.subscribe('/chatroom/public', onMessageReceived);\n    stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessage);\n    userJoin();\n  };\n\n  const userJoin = () => {\n    var chatMessage = {\n      senderName: userData.username,\n      status: \"JOIN\"\n    };\n    stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\n  };\n\n  const onMessageReceived = payload => {\n    var payloadData = JSON.parse(payload.body);\n\n    switch (payloadData.status) {\n      case \"JOIN\":\n        if (!privateChats.get(payloadData.senderName)) {\n          privateChats.set(payloadData.senderName, []);\n          setPrivateChats(new Map(privateChats));\n        }\n\n        break;\n\n      case \"MESSAGE\":\n        publicChats.push(payloadData);\n        setPublicChats([...publicChats]);\n        break;\n    }\n  };\n\n  const onPrivateMessage = payload => {\n    console.log(payload);\n    var payloadData = JSON.parse(payload.body);\n\n    if (privateChats.get(payloadData.senderName)) {\n      privateChats.get(payloadData.senderName).push(payloadData);\n      setPrivateChats(new Map(privateChats));\n    } else {\n      let list = [];\n      list.push(payloadData);\n      privateChats.set(payloadData.senderName, list);\n      setPrivateChats(new Map(privateChats));\n    }\n  };\n\n  const onError = err => {\n    console.log(err);\n  };\n\n  const handleMessage = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({ ...userData,\n      \"message\": value\n    });\n  };\n\n  const sendValue = () => {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        message: userData.message,\n        status: \"MESSAGE\"\n      };\n      console.log(chatMessage);\n      stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\n      setUserData({ ...userData,\n        \"message\": \"\"\n      });\n    }\n  };\n\n  const sendPrivateValue = () => {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        receiverName: tab,\n        message: userData.message,\n        status: \"MESSAGE\"\n      };\n\n      if (userData.username !== tab) {\n        privateChats.get(tab).push(chatMessage);\n        setPrivateChats(new Map(privateChats));\n      }\n\n      stompClient.send(\"/app/private-message\", {}, JSON.stringify(chatMessage));\n      setUserData({ ...userData,\n        \"message\": \"\"\n      });\n    }\n  };\n\n  const handleUsername = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({ ...userData,\n      \"username\": value\n    });\n  };\n\n  const registerUser = () => {\n    connect();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row card-body d-flex\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"pt-4\",\n        id: \"mensajes-lista\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          class: \"text-white font-weight-bold\",\n          children: [\"Lista de Mensajes\", /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa-solid fa-pen-to-square mx-2 text-primary fa-fw\",\n            id: \"nuevo-mensaje\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"member-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              class: \"text-white pb-2 mt-0\",\n              id: \"titulo-mensajes\",\n              children: \"Mis Contactos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => {\n                  setTab(\"CHATROOM\");\n                },\n                className: `member ${tab === \"CHATROOM\" && \"active\"}`,\n                children: \"Chat Global\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 29\n              }, this), [...privateChats.keys()].map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => {\n                  setTab(name);\n                },\n                className: `member ${tab === name && \"active\"}`,\n                children: name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this), tab === \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"chat-messages mensajes-container pt-5\",\n              style: \"background-color: #f4f4f4;\",\n              children: publicChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: `message ${chat.senderName === userData.username && \"self\"}`,\n                children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"avatar\",\n                  children: chat.senderName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 79\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-data\",\n                  children: chat.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 37\n                }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"avatar self\",\n                  children: chat.senderName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 79\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"send-message\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"input-message\",\n                placeholder: \"Ingresa un mensaje...\",\n                value: userData.message,\n                onChange: handleMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"send-button\",\n                onClick: sendValue,\n                children: \"Enviar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 42\n          }, this), tab !== \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"chat-messages\",\n              children: [...privateChats.get(tab)].map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: `message ${chat.senderName === userData.username && \"self\"}`,\n                children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"avatar\",\n                  children: chat.senderName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 79\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-data\",\n                  children: chat.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 37\n                }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"avatar self\",\n                  children: chat.senderName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 79\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"send-message\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"input-message\",\n                placeholder: \"Ingresa un mensaje...\",\n                value: userData.message,\n                onChange: handleMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"send-button\",\n                onClick: sendPrivateValue,\n                children: \"Enviar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"user-name\",\n        placeholder: \"Ingresa tu nombre...\",\n        name: \"userName\",\n        value: userData.username,\n        onChange: handleUsername,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: registerUser,\n        children: \"Conectarse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatRoom, \"kwdsEeqJMgMnJs8KisBP4cHs4+A=\");\n\n_c = ChatRoom;\nexport default ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["D:/Documentos/workspace/react-client/src/components/ChatRoom.js"],"names":["React","useEffect","useState","over","SockJS","stompClient","ChatRoom","privateChats","setPrivateChats","Map","publicChats","setPublicChats","tab","setTab","userData","setUserData","username","receiverName","connected","message","console","log","connect","Sock","onConnected","onError","subscribe","onMessageReceived","onPrivateMessage","userJoin","chatMessage","senderName","status","send","JSON","stringify","payload","payloadData","parse","body","get","set","push","list","err","handleMessage","event","value","target","sendValue","sendPrivateValue","handleUsername","registerUser","keys","map","name","index","chat"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {over} from 'stompjs';\nimport SockJS from 'sockjs-client';\n\nvar stompClient =null;\nconst ChatRoom = () => {\n    const [privateChats, setPrivateChats] = useState(new Map());     \n    const [publicChats, setPublicChats] = useState([]); \n    const [tab,setTab] =useState(\"CHATROOM\");\n    const [userData, setUserData] = useState({\n        username: '',\n        receiverName: '',\n        connected: false,\n        message: ''\n      });\n    useEffect(() => {\n      console.log(userData);\n    }, [userData]);\n\n    const connect =()=>{\n        let Sock = new SockJS('http://localhost:8080/ws');\n        stompClient = over(Sock);\n        stompClient.connect({},onConnected, onError);\n    }\n\n    const onConnected = () => {\n        setUserData({...userData,\"connected\": true});\n        stompClient.subscribe('/chatroom/public', onMessageReceived);\n        stompClient.subscribe('/user/'+userData.username+'/private', onPrivateMessage);\n        userJoin();\n    }\n\n    const userJoin=()=>{\n          var chatMessage = {\n            senderName: userData.username,\n            status:\"JOIN\"\n          };\n          stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\n    }\n\n    const onMessageReceived = (payload)=>{\n        var payloadData = JSON.parse(payload.body);\n        switch(payloadData.status){\n            case \"JOIN\":\n                if(!privateChats.get(payloadData.senderName)){\n                    privateChats.set(payloadData.senderName,[]);\n                    setPrivateChats(new Map(privateChats));\n                }\n                break;\n            case \"MESSAGE\":\n                publicChats.push(payloadData);\n                setPublicChats([...publicChats]);\n                break;\n        }\n    }\n    \n    const onPrivateMessage = (payload)=>{\n        console.log(payload);\n        var payloadData = JSON.parse(payload.body);\n        if(privateChats.get(payloadData.senderName)){\n            privateChats.get(payloadData.senderName).push(payloadData);\n            setPrivateChats(new Map(privateChats));\n        }else{\n            let list =[];\n            list.push(payloadData);\n            privateChats.set(payloadData.senderName,list);\n            setPrivateChats(new Map(privateChats));\n        }\n    }\n\n    const onError = (err) => {\n        console.log(err);\n        \n    }\n\n    const handleMessage =(event)=>{\n        const {value}=event.target;\n        setUserData({...userData,\"message\": value});\n    }\n    const sendValue=()=>{\n            if (stompClient) {\n              var chatMessage = {\n                senderName: userData.username,\n                message: userData.message,\n                status:\"MESSAGE\"\n              };\n              console.log(chatMessage);\n              stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\n              setUserData({...userData,\"message\": \"\"});\n            }\n    }\n\n    const sendPrivateValue=()=>{\n        if (stompClient) {\n          var chatMessage = {\n            senderName: userData.username,\n            receiverName:tab,\n            message: userData.message,\n            status:\"MESSAGE\"\n          };\n          \n          if(userData.username !== tab){\n            privateChats.get(tab).push(chatMessage);\n            setPrivateChats(new Map(privateChats));\n          }\n          stompClient.send(\"/app/private-message\", {}, JSON.stringify(chatMessage));\n          setUserData({...userData,\"message\": \"\"});\n        }\n    }\n\n    const handleUsername=(event)=>{\n        const {value}=event.target;\n        setUserData({...userData,\"username\": value});\n    }\n\n    const registerUser=()=>{\n        connect();\n    }\n    return (\n    <div className=\"container-fluid\">\n        {userData.connected?\n        <div className=\"row card-body d-flex\">\n            <div class=\"pt-4\" id=\"mensajes-lista\">\n                <h4 class=\"text-white font-weight-bold\">Lista de Mensajes      \n                    <i class=\"fa-solid fa-pen-to-square mx-2 text-primary fa-fw\" id=\"nuevo-mensaje\"></i>\n                </h4>\n                <div className=\"chat-box\">\n                    <div className=\"member-list\">\n                        \n                        <h5 class=\"text-white pb-2 mt-0\" id=\"titulo-mensajes\">Mis Contactos</h5>\n                        <ul>\n                            <li onClick={()=>{setTab(\"CHATROOM\")}} className={`member ${tab===\"CHATROOM\" && \"active\"}`}>Chat Global</li>\n                            {[...privateChats.keys()].map((name,index)=>(\n                                <li onClick={()=>{setTab(name)}} className={`member ${tab===name && \"active\"}`} key={index}>{name}</li>\n                            ))}\n                        </ul>\n                    </div>\n\n\n                    {tab===\"CHATROOM\" && <div className=\"chat-content\">\n                        <ul className=\"chat-messages mensajes-container pt-5\" style=\"background-color: #f4f4f4;\">\n                            {publicChats.map((chat,index)=>(\n                                <li className={`message ${chat.senderName === userData.username && \"self\"}`} key={index}>\n                                    {chat.senderName !== userData.username && <div className=\"avatar\">{chat.senderName}</div>}\n                                    <div className=\"message-data\">{chat.message}</div>\n                                    {chat.senderName === userData.username && <div className=\"avatar self\">{chat.senderName}</div>}\n                                </li>\n                            ))}\n                        </ul>\n\n                        <div className=\"send-message\">\n                            <input type=\"text\" className=\"input-message\" placeholder=\"Ingresa un mensaje...\" value={userData.message} onChange=     {handleMessage} /> \n                            <button type=\"button\" className=\"send-button\" onClick={sendValue}>Enviar</button>\n                        </div>\n                    </div>}\n\n\n                    {tab!==\"CHATROOM\" && <div className=\"chat-content\">\n                        <ul className=\"chat-messages\">\n                            {[...privateChats.get(tab)].map((chat,index)=>(\n                                <li className={`message ${chat.senderName === userData.username && \"self\"}`} key={index}>\n                                    {chat.senderName !== userData.username && <div className=\"avatar\">{chat.senderName}</div>}\n                                    <div className=\"message-data\">{chat.message}</div>\n                                    {chat.senderName === userData.username && <div className=\"avatar self\">{chat.senderName}</div>}\n                                </li>\n                            ))}\n                        </ul>\n\n                        <div className=\"send-message\">\n                            <input type=\"text\" className=\"input-message\" placeholder=\"Ingresa un mensaje...\" value={userData.message} onChange=     {handleMessage} /> \n                            <button type=\"button\" className=\"send-button\" onClick={sendPrivateValue}>Enviar</button>\n                        </div>\n                    </div>}\n                    \n\n                </div>\n            </div>\n            </div>\n            :\n            <div className=\"register\">\n                <input\n                    id=\"user-name\"\n                    placeholder=\"Ingresa tu nombre...\"\n                    name=\"userName\"\n                    value={userData.username}\n                    onChange={handleUsername}\n                    margin=\"normal\"\n                  />\n                  <button type=\"button\" onClick={registerUser}>\n                        Conectarse\n                  </button> \n            </div>\n        }\n    </div>\n    )\n}\n\nexport default ChatRoom\n"]},"metadata":{},"sourceType":"module"}